help()
help.start()
q()
install.packages("slidify")
install.packages("devtools")
install.packages("ggplot2")
install.packages("slidify")
install.packages("Rtools")
library(devtools)
install.packages("KernSmooth")
library(KernSmooth)
source(http://cran.r-project.org/bin/windows/Rtools)
source(http://cran.r-project.org/bin/windows/Rtools)
help.search(source)
help.search("source")
library(ggplot2)
search()
exit
quit
find.package("devtools")
library(swirl)
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"David Aguinaga")
my_name
paste(my_name,collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep"")
paste(1:3,c("X","Y","Z"),sep"")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- (44,NA,5,NA)
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
aattributes(mmy_char)
aattributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(data = 1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
5 != 7
info()
!5 == 7
TRUE / FALSE
TRUE & FALSE
FALSE & TRUE
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(inst > 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function(x)
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
?"function"
submit()
submit()
submit()
submit()
num / divisor
remainder <- function(num, divisor = 2) {
num / divisor
}
remainder <- function(num, divisor = 2) {
remainder(2)
exitr
quit
source('C:/Users/David/AppData/Local/Temp/RtmpmGCEj3/remainder.R')
num / divisor
num / divisor
num / divisor
num / divisor
num / divisor
num / divisor
}
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(reminder)
args(remainder)
submit()
evaluate(std,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length()]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("Hi")
submit()
mad_libs("crap","stupid","the")
submit()
'I'%p%'love'%p%'R'
'I'%p%'love'%p%'R!'
cls
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect(flags,class())
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
unique(flags)
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(|flags$population,flags$landmass,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,nrow(10))
?head
head(plants,n=10)
tail(plants,n=15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
sum(flips[0])
sum(!flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
rbinom(1,size = 100,prob = 0.7)
flips2 <- rbinom(100,size=1,prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean = 100,sd = 25)
?rpois
rpois(10)
rpois(5)
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
cm
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
d2
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plogis(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(dist ~ speed,cars )
plot(x=cars$dist,y=cars$speed)
?plot
plot(cars,xlab="Speed")
plot(x=cars$dist,y=cars$speed,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
?plot
plot(x=cars$speed,y=cars$dist,main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2
)
plot(cars,xlim = c(10,15))
?points
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl,data = mtcars)
hist(mtcars$mpg)
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
rm(list = ls())
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
?strptime
datestring <- c("Enero 10, 2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
datestring <- c("Enero 10, 2012 10:40", "Diciembre 9, 2011 9:10")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
rm(list = ls())
setwd("C:/Users/David/datasciencecoursera")
source("submitscript1.R")
submit()
